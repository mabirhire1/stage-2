# nginx.conf.template
user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  send_timeout   10s;
  client_header_timeout 5s;
  client_body_timeout 5s;
  keepalive_timeout  5s;

  # Define upstreams with aggressive fail detection
  upstream app_primary {
    server ${BLUE_HOST}:${BLUE_PORT} max_fails=1 fail_timeout=2s;
    server ${GREEN_HOST}:${GREEN_PORT} backup;
  }

  upstream app_primary_alt {
    server ${GREEN_HOST}:${GREEN_PORT} max_fails=1 fail_timeout=2s;
    server ${BLUE_HOST}:${BLUE_PORT} backup;
  }

  # Pick which pool is active
  map "$ACTIVE_POOL" $upstream_name {
    default app_primary;
    blue app_primary;
    green app_primary_alt;
  }

  server {
    listen 80;
    server_name _;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Main app route
    location / {
      proxy_connect_timeout 1s;
      proxy_send_timeout 2s;
      proxy_read_timeout 3s;

      # Failover logic: retry on any failure quickly
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
      proxy_next_upstream_tries 2;
      proxy_next_upstream_timeout 5s;

      proxy_pass http://$upstream_name;
      proxy_buffering off;
    }

    # Healthcheck endpoint
    location /healthz {
      proxy_pass http://$upstream_name/healthz;
      proxy_connect_timeout 1s;
      proxy_read_timeout 2s;
      proxy_send_timeout 2s;
      proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
      proxy_next_upstream_tries 2;
    }

    # Version endpoint (same logic as /)
    location /version {
      proxy_pass http://$upstream_name/version;
      proxy_connect_timeout 1s;
      proxy_read_timeout 3s;
      proxy_send_timeout 3s;
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
      proxy_next_upstream_tries 2;
    }
  }
}
